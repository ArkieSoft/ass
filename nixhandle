#!/usr/bin/env bash

platform="$(uname)"

switch() {
  case $os in
    m)
      darwin-rebuild switch --flake .
      figlet "Switched" | lolcat
      nixgit
      ;;
    n)
      nixos-rebuild --use-remote-sudo switch
      figlet "Switched" | lolcat
      nixgit
      ;;
    l)
      echo "Work in Progress"
      exit 1
      ;;
    *)
      echo "uhhh...."
      exit 1
      ;;
  esac
}

update() {
  case $os in
    m)
      nix flake update .
      darwin-rebuild switch --flake .
      figlet "Updooted" | lolcat
      nixgit
      ;;
    n)
      sudo nix flake update
      nixos-rebuild --use-remote-sudo boot
      figlet "Updooted" | lolcat
      nixgit

      ;;
    l)
      echo "Work in Progress"
      exit 1
      ;;
    *)
      echo "uhhhh....."
      exit 1
      ;;
  esac
}

nixgit() {
  if [ -d .git ];then
    echo "Do you want to make a commit? [y/N]: "
    read git
  
    if [[ $git = y ]] || [[ $git = Y ]];then
      echo "What to label for commit?: "
      read commit
      git commit -m "$commit"
    elif [[ $git = e ]] || [[ $git = exit ]];then
      figlet "Complete" | lolcat
      exit 1
    else
      if [[ $1 = g ]] || [[ $1 = "git" ]];then
        echo "This was a huge waste of time!"
        exit 1
      else
        clean
      fi
    fi
  
    echo "Do you want to push the commit? [y/N]: "
    read push
  
    if [[ $push == y ]] || [[ $push == Y ]];then
      git push
      figlet "Commit Pushed"
      if [[ $1 != g ]] && [[ $1 != git ]]; then
        clean
      else
        figlet "Commit Pushed" | lolcat
        exit 1
      fi
    elif [[ $push = e ]] || [[ $push = exit ]];then
      figlet "Complete!" | lolcat
    else
      if [[ $1 = g ]] || [[ $1 = git ]];then
        echo "This was a huge waste of time"
        exit 1
      else
        clean
      fi
    fi
  else
    echo "No Git Repo Found!"
    clean
  fi
}

clean() {
  echo "Want to clean the old generations and old files? [y/N]: "
  read clean
  if [[ $clean == y ]] || [[ $clean == Y ]];then
    sudo nix-env --profile /nix/var/nix/profiles/system --delete-generations old
    echo "Cleaning Files"
    sudo nix store gc
    sudo nix-collect-garbage
    figlet "Cleanup Complete" | lolcat
    exit 1
  elif [[ $clean = e ]] || [[ $clean = exit ]];then
    figlet "Complete" | lolcat
    exit 1
  else
    case $1 in
      g | git)
        figlet "Commit Made" | lolcat
        exit 1
        ;;
      u | update)
        figlet "Updated" | lolcat
        exit 1
        ;;
      s | switch)
        figlet "Switched" | lolcat
        exit 1
        ;;
      *)
        echo "uhhhh"
        exit 1
        ;;
    esac
  fi
}

case $platform in
  Darwin)
    cd $HOME/.config/nixos
    os="m"
    ;;
  Linux)
    source /etc/os-release
    if [[ $ID == nixos ]]; then
      cd /etc/nixos
      os="n"
    else
      cd $HOME/.config/nixos
      os="l"
    fi
    ;;
  *)
    echo "Wtf are you doing?"
    exit 1
    ;;
esac

if [[ -d .git ]];then
  git add .
fi

case $1 in
  g | git)
    nixgit $1
    ;;
  u | update)
    update
    ;;
  s | switch)
    switch
    ;;
  c | clean)
    clean $1
    ;;
  *)
    echo "No arguments, provided! g for Git, u for Update, s for Switch"
    exit 1
esac

